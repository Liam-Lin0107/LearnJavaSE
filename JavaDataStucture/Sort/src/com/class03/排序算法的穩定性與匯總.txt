＊穩定性
    表示在排序過程中相對次序不變
    應用：有好幾個班級裡面的學生有不同的年齡, 先按照年齡排序, 再按照班級排序, 因為具有穩定性在排班級時可以做到維持年齡排序不變

    具有穩定性的排序：          時間        空間
        1. BubbleSort       O(N^2)      O(1)
        2. InsertionSort    O(N^2)      O(1)
        3. MergeSort        O(N*logN)   O(N)
    不具有穩定性的排序：
        1. SelectionSort    O(N^2)      O(1)
        2. QuickSort        O(N*logN)   O(logN)
        3. HeapSort         O(N*logN)   O(1)
        4. 計數排序
        5. RadixSort

    時間限制：QuickSort （常數項時間複雜度最小）
    空間限制：HeapSort
    穩定性限制：MergeSort

    1) 基於比較的排序時間複雜度無法低於O(N*logN)
    2) 時間複雜度為O(N*logN) 具有穩定性 空間複雜度不可能小於O(N)

    工程上的改進
    思路：在小樣本下O(N^2) 會快過 O(N*logN)
    所以在樣本 <=60的情況下選擇使用InsertionSort,  >60使用QuickSort =>綜合排序
                                                    （MergeSort : 考慮穩定性）